class SPARQLQueryDispatcher {
	constructor( endpoint ) {
		this.endpoint = endpoint;
	}

	query( sparqlQuery ) {
		const fullUrl = this.endpoint + '?query=' + encodeURIComponent( sparqlQuery );
		const headers = { 'Accept': 'application/sparql-results+json' };

		return fetch( fullUrl, { headers } ).then( body => body.json() );
	}
}

const endpointUrl = 'https://query.wikidata.org/sparql';
const sparqlQuery = `SELECT DISTINCT ?bodypartLabel ?diseaseLabel ?drugLabel ?numLang
WHERE { 

  { SELECT ?disease ?bodypart ?drug (count(?lang) as ?numLang) WHERE { 
    ?disease wdt:P31 wd:Q12136. #Is an instance of a disease.
    ?disease wdt:P927 ?bodypart;
           wdt:P2176 ?drug.
    ?disease rdfs:label ?label
    filter(!langmatches(lang(?label), 'en')) bind(lang(?label) as ?lang)
  } GROUP BY ?disease ?bodypart ?drug
   }
  FILTER (?numLang > 10).
  SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en" }
  }`;

const queryDispatcher = new SPARQLQueryDispatcher( endpointUrl );
queryDispatcher.query( sparqlQuery ).then( console.log );
